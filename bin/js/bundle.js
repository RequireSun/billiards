var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Game_1 = require("./script/Game");
var Ball_1 = require("./script/Ball");
var GameControl_1 = require("./script/GameControl");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/Game.ts", Game_1.default);
        reg("script/Ball.ts", Ball_1.default);
        reg("script/GameControl.ts", GameControl_1.default);
    };
    GameConfig.width = 1136;
    GameConfig.height = 640;
    GameConfig.scaleMode = "fixedauto";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "game/Game.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();

},{"./script/Ball":3,"./script/Game":4,"./script/GameControl":5}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 子弹脚本，实现子弹飞行逻辑及对象池回收机制
 */
var Ball = /** @class */ (function (_super) {
    __extends(Ball, _super);
    function Ball() {
        return _super.call(this) || this;
    }
    // onEnable(): void {
    //     //设置初始速度
    //     var rig: Laya.RigidBody = this.owner.getComponent(Laya.RigidBody);
    //     rig.setVelocity({ x: 0, y: -10 });
    // }
    Ball.prototype.onEnable = function () {
        if (this.number) {
            var label = this.owner.getChildByName('label');
            label.text = "" + this.number;
        }
        var parent = this.owner.parent;
        this._startX = 22; //parent.x;
        this._startY = 22; //parent.y;
        this._endX = /*this._startX + */ parent.width;
        this._endY = /*this._startY + */ parent.height;
        this._middleLeft = parent.width / 2 - 22;
        this._middleRight = parent.width / 2 + 22;
        this._startX += 22;
        this._startY += 22;
        this._endX -= 22;
        this._endY -= 22;
        Object.defineProperty(this.owner, 'startMove', {
            enumerable: false,
            value: function (xForce, yForce) {
                var rig = this.getComponent(Laya.RigidBody);
                rig.setVelocity({ x: xForce, y: yForce });
            },
        });
    };
    Ball.prototype.onUpdate = function () {
        var owner = this.owner;
        var x = owner.x, y = owner.y;
        if (x < this._startX) {
            if (y < this._startY) {
                console.log('左上洞');
            }
            else if (y > this._endY) {
                console.log('左下洞');
            }
        }
        else if (x > this._endX) {
            if (y < this._startY) {
                console.log('右上洞');
            }
            else if (y > this._endY) {
                console.log('右下洞');
            }
        }
        else if (y < this._startY) {
            if (x > this._middleLeft && x < this._middleRight) {
                console.log('中上洞');
            }
        }
        else if (y > this._endY) {
            if (x > this._middleLeft && x < this._middleRight) {
                console.log('中下洞');
            }
        }
        // 其他情况就是在桌子中间了
    };
    return Ball;
}(Laya.Script));
exports.default = Ball;

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var GameControl_1 = require("./GameControl");
var Game = /** @class */ (function (_super) {
    __extends(Game, _super);
    function Game() {
        return _super.call(this) || this;
    }
    Game.prototype.onEnable = function () {
        this._control = this.getComponent(GameControl_1.default);
    };
    return Game;
}(layaMaxUI_1.ui.game.GameUI));
exports.default = Game;

},{"./../ui/layaMaxUI":6,"./GameControl":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏控制脚本。定义了几个dropBox，bullet，createBoxInterval等变量，能够在IDE显示及设置该变量
 * 更多类型定义，请参考官方文档
 */
var GameControl = /** @class */ (function (_super) {
    __extends(GameControl, _super);
    function GameControl() {
        return _super.call(this) || this;
    }
    GameControl.prototype.onEnable = function () {
        this._gameBox = this.owner.getChildByName("gameBox");
    };
    GameControl.prototype.onStageClick = function (e) {
        //停止事件冒泡，提高性能，当然也可以不要
        e.stopPropagation();
        var ball = this._gameBox.getChildByName('ball_white');
        var parent = ball.parent;
        var touchX = e.stageX;
        var touchY = e.stageY;
        var ballX = ball.x + parent.x;
        var ballY = ball.y + parent.y;
        var x = (touchX - ballX) / 20;
        var y = (touchY - ballY) / 20;
        console.log(touchX, touchY, ballX, ballY, x, y);
        // const x: number = (.5 < Math.random() ? 1 : -1) * Math.random() * 10;
        // const y: number = (.5 < Math.random() ? 1 : -1) * Math.random() * 10;
        ball.startMove(x, y);
        //舞台被点击后，使用对象池创建子弹
        // let flyer: Laya.Sprite = Laya.Pool.getItemByCreateFun("bullet", this.bullet.create, this.bullet);
        // flyer.pos(Laya.stage.mouseX, Laya.stage.mouseY);
        // this._gameBox.addChild(flyer);
    };
    return GameControl;
}(Laya.Script));
exports.default = GameControl;

},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ui;
(function (ui) {
    var game;
    (function (game) {
        var GameUI = /** @class */ (function (_super) {
            __extends(GameUI, _super);
            function GameUI() {
                return _super.call(this) || this;
            }
            GameUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("game/Game");
            };
            return GameUI;
        }(Laya.Scene));
        game.GameUI = GameUI;
        var HoleUI = /** @class */ (function (_super) {
            __extends(HoleUI, _super);
            function HoleUI() {
                return _super.call(this) || this;
            }
            HoleUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("game/Hole");
            };
            return HoleUI;
        }(Laya.View));
        game.HoleUI = HoleUI;
    })(game = ui.game || (ui.game = {}));
})(ui = exports.ui || (exports.ui = {}));

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
