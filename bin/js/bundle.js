var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Game_1 = require("./script/Game");
var Ball_1 = require("./script/Ball");
var GameControl_1 = require("./script/GameControl");
var Player_1 = require("./script/Player");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/Game.ts", Game_1.default);
        reg("script/Ball.ts", Ball_1.default);
        reg("script/GameControl.ts", GameControl_1.default);
        reg("script/Player.ts", Player_1.default);
    };
    GameConfig.width = 1136;
    GameConfig.height = 640;
    GameConfig.scaleMode = "fixedauto";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "game/Game.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();

},{"./script/Ball":3,"./script/Game":4,"./script/GameControl":5,"./script/Player":6}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var Game_1 = require("./Game");
var initialPositionWhite = new Laya.Point(140, 208);
/**
 * 子弹脚本，实现子弹飞行逻辑及对象池回收机制
 */
var Ball = /** @class */ (function (_super) {
    __extends(Ball, _super);
    function Ball() {
        var _this = _super.call(this) || this;
        _this.isInitialized = false;
        return _this;
    }
    Ball.prototype.onEnable = function () {
        if (!this.isInitialized) {
            // 测试时候没有皮肤, 用的白球 + 数字
            // if (this.number) {
            //     const label: Laya.Label = this.owner.getChildByName('label') as Laya.Label;
            //     label.text = `${this.number}`;
            // }
            Object.defineProperty(this.owner, 'startMove', {
                enumerable: false,
                value: function (xForce, yForce) {
                    var rig = this.getComponent(Laya.RigidBody);
                    rig.setVelocity({ x: xForce, y: yForce });
                },
            });
            this.isInitialized = true;
        }
    };
    Ball.prototype.onDisable = function () { };
    Ball.prototype.onUpdate = function () {
        var owner = this.owner;
        var x = owner.x, y = owner.y;
        var _a = Game_1.default.instance.getCollisionCoordinate(), startX = _a.startX, startY = _a.startY, endX = _a.endX, endY = _a.endY, middle = _a.middle, middleLeft = _a.middleLeft, middleRight = _a.middleRight;
        if (x < startX) {
            if (y < startY) {
                if (22 > Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))) {
                    console.log('左上洞');
                    this.handlerGoal();
                }
            }
            else if (y > endY) {
                if (22 > Math.sqrt((Math.pow((22 - (startX - x)), 2)) +
                    (Math.pow((22 - (y - endY)), 2)))) {
                    console.log('左下洞');
                    this.handlerGoal();
                }
            }
        }
        else if (x > endX) {
            if (y < startY) {
                if (22 > Math.sqrt((Math.pow((22 - (x - endX)), 2)) +
                    (Math.pow((22 - (startY - y)), 2)))) {
                    console.log('右上洞');
                    this.handlerGoal();
                }
            }
            else if (y > endY) {
                if (22 > Math.sqrt((Math.pow((22 - (x - endX)), 2)) +
                    (Math.pow((22 - (y - endY)), 2)))) {
                    console.log('右下洞');
                    this.handlerGoal();
                }
            }
        }
        else if (y < startY) {
            if (x > middleLeft && x < middleRight) {
                if (22 > Math.sqrt((Math.pow((x - middle), 2)) +
                    (Math.pow((22 - (startY - y)), 2)))) {
                    console.log('中上洞');
                    this.handlerGoal();
                }
            }
        }
        else if (y > endY) {
            if (x > middleLeft && x < middleRight) {
                if (22 > Math.sqrt((Math.pow((x - middle), 2)) +
                    (Math.pow((22 - (y - endY)), 2)))) {
                    console.log('中下洞');
                    this.handlerGoal();
                }
            }
        }
        // 其他情况就是在桌子中间了
    };
    Ball.prototype.handlerGoal = function () {
        // if (0 === this.number) {
        //     console.log('白球进了');
        //     (this.owner as Laya.Sprite).pos(initialPositionWhite.x, initialPositionWhite.y);
        // } else {
        //     console.log('进球！', this.number);
        //     // TODO 要计算下下方计分区位置在哪
        //     this.owner.removeSelf();
        //     const containerGoal = Game.instance.container_goal.addChild(this.owner);
        // }
        // Game.instance.event('ball.goal', this.number);
        Game_1.default.instance.handlerGoal(this.number);
    };
    return Ball;
}(Laya.Script));
exports.default = Ball;

},{"./Game":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var GameControl_1 = require("./GameControl");
var Game = /** @class */ (function (_super) {
    __extends(Game, _super);
    function Game() {
        var _this = _super.call(this) || this;
        Game.instance = _this;
        return _this;
    }
    Game.prototype.onEnable = function () {
        this._control = this.getComponent(GameControl_1.default);
        this._containerGoal = this.getChildByName('container_goal');
        var containerBall = this._containerBall = this.getChildByName('container_ball');
        this._startX = 0;
        this._startY = 0;
        this._endX = containerBall.width;
        this._endY = containerBall.height;
        this._middle = containerBall.width / 2;
        this._middleLeft = containerBall.width / 2 - 22;
        this._middleRight = containerBall.width / 2 + 22;
        this._startX += 22;
        this._startY += 22;
        this._endX -= 22;
        this._endY -= 22;
        // this.showRect();
    };
    Game.prototype.getCollisionCoordinate = function () {
        return {
            startX: this._startX,
            startY: this._startY,
            endX: this._endX,
            endY: this._endY,
            middle: this._middle,
            middleLeft: this._middleLeft,
            middleRight: this._middleRight,
        };
    };
    /**
     * 展示碰撞框
     */
    Game.prototype.showRect = function () {
        var line = new Laya.Sprite();
        line.graphics.drawRect(this._middle, 0, 2, 500, '#ff0000');
        line.graphics.drawRect(this._middleLeft, 0, 2, 500, '#ff0000');
        line.graphics.drawRect(this._middleRight, 0, 2, 500, '#ff0000');
        line.graphics.drawRect(this._startX, 0, 2, 500, '#ff0000');
        line.graphics.drawRect(this._endX, 0, 2, 500, '#ff0000');
        line.graphics.drawRect(0, this._startY, 900, 2, '#ff0000');
        line.graphics.drawRect(0, this._endY, 900, 2, '#ff0000');
        this.addChild(line);
    };
    return Game;
}(layaMaxUI_1.ui.game.GameUI));
exports.default = Game;

},{"./../ui/layaMaxUI":7,"./GameControl":5}],5:[function(require,module,exports){
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var initialPositionWhite = new Laya.Point(140, 208);
// 进球后在下方展示区域是否将角度回正 (我感觉不回正也挺好看的)
var isGoalRotationReset = true;
/**
 * 游戏控制脚本。定义了几个dropBox，bullet，createBoxInterval等变量，能够在IDE显示及设置该变量
 * 更多类型定义，请参考官方文档
 */
var GameControl = /** @class */ (function (_super) {
    __extends(GameControl, _super);
    function GameControl() {
        var _this = _super.call(this) || this;
        _this._goal = {
            1: false,
            2: false,
            3: false,
            4: false,
            5: false,
            6: false,
            7: false,
            8: false,
            9: false,
            10: false,
            11: false,
            12: false,
            13: false,
            14: false,
            15: false,
        };
        return _this;
    }
    GameControl.prototype.onEnable = function () {
        this._containerBall = this.owner.getChildByName("container_ball");
        this.addListeners();
    };
    GameControl.prototype.onDisable = function () {
        this.removeListeners();
    };
    GameControl.prototype.onStageClick = function (e) {
        //停止事件冒泡，提高性能，当然也可以不要
        e.stopPropagation();
        // 这个是随机方向生成, 最早开发的时候用的, 现在早就用不到了
        // const x: number = (.5 < Math.random() ? 1 : -1) * Math.random() * 10;
        // const y: number = (.5 < Math.random() ? 1 : -1) * Math.random() * 10;
        var ball = this._containerBall.getChildByName('ball_white');
        var parent = ball.parent;
        var touchX = e.stageX;
        var touchY = e.stageY;
        var ballX = ball.x + parent.x;
        var ballY = ball.y + parent.y;
        var x = (touchX - ballX) / 20;
        var y = (touchY - ballY) / 20;
        // 这个是开发时用来判断点击位置和球运行方向用的, 现在已经算好了, 就先隐藏, 以后调试可以继续用
        // console.log(touchX, touchY, ballX, ballY, x, y);
        ball.startMove(x, y);
    };
    GameControl.prototype.addListeners = function () {
        var _this = this;
        // this.owner.on('ball.goal', this, this.handlerGoal);
        Object.defineProperty(this.owner, 'handlerGoal', {
            enumerable: false,
            value: function (number) { return _this.handlerGoal(number); },
        });
    };
    GameControl.prototype.removeListeners = function () {
        // this.owner.off('ball.goal', this, this.handlerGoal);
        Object.defineProperty(this.owner, 'handlerGoal', {
            enumerable: false,
        });
    };
    GameControl.prototype.handlerGoal = function (number) {
        if (0 === number) {
            console.log('白球进了');
            this._containerBall.getChildByName('ball_white').pos(initialPositionWhite.x, initialPositionWhite.y);
        }
        else if (!this._goal[number]) {
            console.log('进球！', number);
            this._goal[number] = true;
            // TODO 要计算下下方计分区位置在哪
            var ballName = "ball_" + (10 > number ? "0" + number : number);
            var ball = this._containerBall.getChildByName(ballName);
            // 这个 removeSelf 除了直接写在 ball 里面, 否则都会因为时序问题执行多次, 这里为了代码好看, 多写了防重入逻辑
            ball.removeSelf();
            ball.pos(40 * (number - 1) + 30, 25);
            isGoalRotationReset && (ball.rotation = 0);
            this.owner.container_goal.addChild(ball);
        }
    };
    return GameControl;
}(Laya.Script));
exports.default = GameControl;

},{}],6:[function(require,module,exports){
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var Player = /** @class */ (function (_super) {
    __extends(Player, _super);
    function Player() {
        return _super.call(this) || this;
    }
    Player.prototype.onEnable = function () {
        var elName = this.owner.getChildByName('name');
        var elAvatar = this.owner.getChildByName('avatar');
        var elMask = new Laya.Sprite();
        // 注意, arcTo 的端点 1 是两端点位置切线的交点
        var path = [
            ["moveTo", 10, 0],
            ['lineTo', 40, 0],
            ["arcTo", 50, 0, 50, 10, 10],
            ['lineTo', 50, 40],
            ["arcTo", 50, 50, 40, 50, 10],
            ['lineTo', 10, 50],
            ["arcTo", 0, 50, 0, 40, 10],
            ['lineTo', 0, 10],
            ["arcTo", 0, 0, 10, 0, 10],
        ];
        elMask.graphics.drawPath(0, 0, path, { fillStyle: '#ff0000' });
        elMask.pos(0, 0);
        // this.owner.addChild(elMask);
        elAvatar.mask = elMask;
        if (this.avatar) { }
    };
    return Player;
}(Laya.Script));
exports.default = Player;

},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ui;
(function (ui) {
    var game;
    (function (game) {
        var GameUI = /** @class */ (function (_super) {
            __extends(GameUI, _super);
            function GameUI() {
                return _super.call(this) || this;
            }
            GameUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("game/Game");
            };
            return GameUI;
        }(Laya.Scene));
        game.GameUI = GameUI;
        var HoleUI = /** @class */ (function (_super) {
            __extends(HoleUI, _super);
            function HoleUI() {
                return _super.call(this) || this;
            }
            HoleUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("game/Hole");
            };
            return HoleUI;
        }(Laya.View));
        game.HoleUI = HoleUI;
    })(game = ui.game || (ui.game = {}));
})(ui = exports.ui || (exports.ui = {}));

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
